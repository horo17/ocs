name: .NET Core CI/CD

on: [push, pull_request]

jobs:
  dotnet-publish:
    if: contains(github.ref, 'tags/v')
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        dotnet-version: [3.1]
    runs-on: ${{ matrix.os }}
    env: 
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      NUGET_XMLDOC_MODE: skip
    steps:
      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
            
      - uses: actions/checkout@v2
        
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: nuget-${{ matrix.os }}-${{ matrix.dotnet-version }}
          restore-keys: |
            nuget-${{ matrix.os }}-
            
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: dotnet publish on windows
        if: runner.os == 'Windows'
        working-directory: ./ocs
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:Version=${{ steps.tag.outputs.result }} -o ${{ matrix.os }}

      - name: dotnet publish on ubuntu, macOS
        if: runner.os != 'Windows'
        run: |
          ./builder.sh ${{ matrix.os }} ${{ steps.tag.outputs.result }}
      
      - name: Upload zip archive
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: ocs/${{ matrix.os }}

