name: .NET Core CI/CD

on: [push, pull_request]

jobs:
  test:
    name: xUnit test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet-version: [3.1]
    env: 
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      NUGET_XMLDOC_MODE: skip

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: nuget-${{ matrix.os }}-${{ matrix.dotnet-version }}
        restore-keys: |
          nuget-${{ matrix.os }}-
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Test
      working-directory: ./Test
      run: dotnet test --verbosity normal -c Debug

  dotnet-publish:
    if: contains(github.ref, 'tags/v')
    needs: [test]
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        dotnet-version: [3.1]
    runs-on: ${{ matrix.os }}
    env: 
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v2
        
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: nuget-${{ matrix.os }}-${{ matrix.dotnet-version }}
          restore-keys: |
            nuget-${{ matrix.os }}-
            
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: vars
        id: vars
        run: |
          echo ::set-output name=runtime_id::"$(echo ${{ matrix.os }} | sed 's/windows/win/g;s/ubuntu/linux/g;s/macOS/osx/g;s/latest/x64/g')"
          echo ::set-output name=version::${TAG_REF_NAME##*/v}
        env:
          TAG_REF_NAME: ${{ github.ref }}
        
      - name: dotnet publish
        working-directory: ./ocs
        run: |
          dotnet publish --self-contained true -r ${{ steps.vars.outputs.runtime_id }} -c Release -o ${{ steps.vars.outputs.runtime_id }} -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:Version=${{ steps.vars.outputs.version }}
      
      - name: Upload zip archive
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.vars.outputs.runtime_id }}
          path: ocs/${{ steps.vars.outputs.runtime_id }}
